stages:
  - build_image
  - deploy

variables:
  DOCKER_REGISTRY: docker.io
  DOCKER_IMAGE: username_id/extract-links:latest  # Replace with your Docker Hub username and image name
  KUBERNETES_NAMESPACE: default
  KUBERNETES_CLUSTER_CONFIG: /path/to/your/kubeconfig  # Path to your kubeconfig file, default is ${HOME}/.kube/config
  KUBERNETES_DEPLOYMENT_NAME: extract-links-deployment
  IMAGE_NAME: "extract-links"
  TAG: "v0.0.1"
  REGISTRY: "88915020"  # Replace with own Docker registry ID

build_image:
  stage: build
  image: docker:latest
  services:
    - docker:19.03.12-dind
  before_script:
    - echo "Starting Docker build process"s
    - docker info
    - echo "Logging in to Docker registry"
    - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
  script:
    - echo "Building ${IMAGE_NAME} image"
    - docker build -t ${REGISTRY}/${IMAGE_NAME}:${TAG} .
    - docker push ${REGISTRY}/${IMAGE_NAME}:${TAG}
  only:
    - main

deploy:
  stage: deploy
  image: google/cloud-sdk:alpine
  before_script:
    - echo "Setting up Kubernetes configuration"
    - mkdir -p ~/.kube
    - cp $KUBERNETES_CLUSTER_CONFIG ~/.kube/config
    - kubectl config use-context my-cluster-context
  script:
    - echo "Applying Kubernetes deployment"
    - sed -i "s|image: .*|image: ${REGISTRY}/${IMAGE_NAME}:${TAG}|g" deployment.yaml
    - kubectl apply -f deployment.yaml --namespace=$KUBERNETES_NAMESPACE
    - kubectl rollout status deployment/$KUBERNETES_DEPLOYMENT_NAME --namespace=$KUBERNETES_NAMESPACE
  only:
    - main